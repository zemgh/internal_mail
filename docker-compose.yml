name: internal_mail

services:

  db:
    image: postgres:16.4
    container_name: db
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:5.0.8
    container_name: redis
    restart: always
    command: redis-server

  web:
    build: ./mail_server
    container_name: web
    environment:
      - REDIS_HOST=redis
    ports:
      - 8000:8000
    env_file:
      - .env
    command: python manage.py runserver 0.0.0.0:8000

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  celery:
    build: ./mail_server
    container_name: celery
    command: celery -A mail_server worker -P eventlet --loglevel=info
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - web
      - redis

volumes:
  postgres-data: